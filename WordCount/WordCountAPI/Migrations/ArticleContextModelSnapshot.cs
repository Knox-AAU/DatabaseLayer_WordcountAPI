// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WordCount.Data;

namespace WordCount.Migrations
{
    [DbContext(typeof(ArticleContext))]
    partial class ArticleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("WordCount.DataAccess.WordRatios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasColumnName("amount");

                    b.Property<string>("ArticleTitle")
                        .HasColumnType("text")
                        .HasColumnName("articletitle");

                    b.Property<long>("FileId")
                        .HasColumnType("bigint")
                        .HasColumnName("fid");

                    b.Property<string>("FilePath")
                        .HasColumnType("text")
                        .HasColumnName("filepath");

                    b.Property<decimal>("Percent")
                        .HasColumnType("numeric(38,17)")
                        .HasColumnName("percent");

                    b.Property<long>("SourceId")
                        .HasColumnType("bigint")
                        .HasColumnName("sourceid");

                    b.Property<string>("SourceName")
                        .HasColumnType("varchar")
                        .HasColumnName("sourcename");

                    b.Property<int>("TotalWordsInArticle")
                        .HasColumnType("integer")
                        .HasColumnName("totalwordsinarticle");

                    b.Property<string>("WordName")
                        .HasColumnType("citext")
                        .HasColumnName("wordname");

                    b.HasKey("Id");

                    b.ToTable("wordratios");
                });

            modelBuilder.Entity("WordCount.Models.Article", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FilePath")
                        .HasColumnType("text");

                    b.Property<long?>("PublisherId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int>("TotalWords")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("WordCount.Models.JsonSchemaModel", b =>
                {
                    b.Property<string>("SchemaName")
                        .HasColumnType("text");

                    b.Property<string>("JsonString")
                        .HasColumnType("jsonb");

                    b.HasKey("SchemaName");

                    b.ToTable("JsonSchema");
                });

            modelBuilder.Entity("WordCount.Models.Publisher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("PublisherName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("WordCount.Models.Term", b =>
                {
                    b.Property<long>("ArticleId")
                        .HasColumnType("bigint");

                    b.Property<string>("Word")
                        .HasColumnType("text");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.HasKey("ArticleId", "Word");

                    b.ToTable("Term");
                });

            modelBuilder.Entity("WordCount.Models.Article", b =>
                {
                    b.HasOne("WordCount.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("WordCount.Models.Term", b =>
                {
                    b.HasOne("WordCount.Models.Article", null)
                        .WithMany("Terms")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WordCount.Models.Article", b =>
                {
                    b.Navigation("Terms");
                });
#pragma warning restore 612, 618
        }
    }
}
