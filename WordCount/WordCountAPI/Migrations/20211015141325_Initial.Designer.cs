// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WordCount.Data;

namespace WordCount.Migrations
{
    [DbContext(typeof(ArticleContext))]
    [Migration("20211015141325_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Code_first_test.Models.Article", b =>
                {
                    b.Property<long>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FilePath")
                        .HasColumnType("text");

                    b.Property<string>("PublisherName")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int>("TotalWordsInArticle")
                        .HasColumnType("integer");

                    b.HasKey("ArticleId");

                    b.HasIndex("PublisherName");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Code_first_test.Models.Publisher", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("Code_first_test.Models.Word", b =>
                {
                    b.Property<string>("Literal")
                        .HasColumnType("text");

                    b.Property<long?>("WordOccurancesWordOccuranceId")
                        .HasColumnType("bigint");

                    b.HasKey("Literal");

                    b.HasIndex("WordOccurancesWordOccuranceId");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("Code_first_test.Models.WordOccurances", b =>
                {
                    b.Property<long>("WordOccuranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("ArticleId")
                        .HasColumnType("bigint");

                    b.Property<int>("Occurances")
                        .HasColumnType("integer");

                    b.HasKey("WordOccuranceId");

                    b.HasIndex("ArticleId");

                    b.ToTable("WordOccurances");
                });

            modelBuilder.Entity("Code_first_test.Models.Article", b =>
                {
                    b.HasOne("Code_first_test.Models.Publisher", "Publisher")
                        .WithMany("Articles")
                        .HasForeignKey("PublisherName");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Code_first_test.Models.Word", b =>
                {
                    b.HasOne("Code_first_test.Models.WordOccurances", null)
                        .WithMany("Words")
                        .HasForeignKey("WordOccurancesWordOccuranceId");
                });

            modelBuilder.Entity("Code_first_test.Models.WordOccurances", b =>
                {
                    b.HasOne("Code_first_test.Models.Article", "Article")
                        .WithMany("Words")
                        .HasForeignKey("ArticleId");

                    b.Navigation("Article");
                });

            modelBuilder.Entity("Code_first_test.Models.Article", b =>
                {
                    b.Navigation("Words");
                });

            modelBuilder.Entity("Code_first_test.Models.Publisher", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Code_first_test.Models.WordOccurances", b =>
                {
                    b.Navigation("Words");
                });
#pragma warning restore 612, 618
        }
    }
}
