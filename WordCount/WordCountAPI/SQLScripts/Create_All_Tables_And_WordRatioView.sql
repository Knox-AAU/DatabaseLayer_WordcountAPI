CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
                                                       "MigrationId" character varying(150) NOT NULL,
                                                       "ProductVersion" character varying(32) NOT NULL,
                                                       CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;

CREATE TABLE "JsonSchema" (
                              "SchemaName" text NOT NULL,
                              "JsonString" jsonb NULL,
                              CONSTRAINT "PK_JsonSchema" PRIMARY KEY ("SchemaName")
);

CREATE TABLE "Publisher" (
                             "PublisherName" text NOT NULL,
                             CONSTRAINT "PK_Publisher" PRIMARY KEY ("PublisherName")
);

CREATE TABLE "Article" (
                           "Id" bigint GENERATED BY DEFAULT AS IDENTITY,
                           "FilePath" text NULL,
                           "Title" text NULL,
                           "TotalWords" integer NOT NULL,
                           "PublisherName" text NULL,
                           CONSTRAINT "PK_Article" PRIMARY KEY ("Id"),
                           CONSTRAINT "FK_Article_Publisher_PublisherName" FOREIGN KEY ("PublisherName") REFERENCES "Publisher" ("PublisherName") ON DELETE RESTRICT
);

CREATE TABLE "Term" (
                        "ArticleId" bigint NOT NULL,
                        "Word" text NOT NULL,
                        "Count" integer NOT NULL,
                        CONSTRAINT "PK_Term" PRIMARY KEY ("ArticleId", "Word"),
                        CONSTRAINT "FK_Term_Article_ArticleId" FOREIGN KEY ("ArticleId") REFERENCES "Article" ("Id") ON DELETE CASCADE
);

CREATE INDEX "IX_Article_PublisherName" ON "Article" ("PublisherName");

CREATE UNIQUE INDEX "IX_Publisher_PublisherName" ON "Publisher" ("PublisherName");

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20211030100616_initial', '5.0.10');

COMMIT;


CREATE VIEW "WordRatio" AS
SELECT "ArticleId", "Word", "Count", "Title", "FilePath", "TotalWords","Article"."PublisherName",
       round("Count"::numeric / "TotalWords"::numeric * 100::numeric, 2) AS "Percent"
FROM "Article"
         JOIN "Term" ON "ArticleId" = "Article"."Id"
         JOIN "Publisher" ON "Article"."PublisherName" = "Publisher"."PublisherName";


COMMIT;
